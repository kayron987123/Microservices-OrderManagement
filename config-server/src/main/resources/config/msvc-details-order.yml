spring:
  data:
    redis:
      host: localhost
      port: 6380
      connect-timeout: 2000
      client-type: jedis
    mongodb:
      host: localhost
      port: 27018
      database: msvc-details-order
      username: gad-dev
      password: 12345
    cache:
      type: redis
  docker:
    compose:
      file: ./msvc-details-order/compose.yaml

eureka:
  client:
    service-url:
      DefaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

server:
  port: ${PORT:0}

custom:
  path: /api/v1

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 5
        failure-rate-threshold: 30
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 2
        slow-call-duration-threshold: 3s
        slow-call-rate-threshold: 50
    instances:
      createOrderDetailCircuitBreaker:
        base-config: default
      getOrderDetailByUuidCircuitBreaker:
        base-config: default
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 2s
        retry-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
    instances:
      createOrderDetailRetry:
        base-config: default
      getOrderDetailByUuidRetry:
        base-config: default

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
    diskspace:
      enabled: true